[Unit]
Description=Kubeadm worker bootstarp
ConditionPathExists=!/opt/kubeadm/kbd-init.done
Requires=docker.service
After=docker.service


[Service]
Type=oneshot
RemainAfterExit=true
WorkingDirectory=/opt/kubeadm/
Environment=PATH=/opt/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/bin

User=root
Group=root

# kubeadm would be 'ExecStart' but it does a daemon-reload which screws things up, so we work around with 'ExecStartPre'
# https://github.com/systemd/systemd/issues/518
ExecStartPre=/bin/bash -c "/usr/bin/curl -s http://169.254.169.254/latest/meta-data/local-ipv4 | xargs -i{} sed -i 's/NODE_IP/{}/g' /opt/kubeadm/kubeadm-join.yaml"
ExecStartPre=/bin/bash -c "/usr/bin/curl -s http://169.254.169.254/latest/meta-data/local-hostname | xargs -i{} sed -i 's/NODE_NAME/{}/g' /opt/kubeadm/kubeadm-join.yaml"
ExecStartPre=/usr/bin/timeout 600s /usr/bin/bash -c ' \
echo "Waiting for API server dns to resolve"; \
until [ `dig +short "${API_URL}" | xargs shuf -n1 -e` != "127.0.0.1" ]; do \
    echo "Still waiting..."; sleep 5; \
done; echo "Done!" \
'
# "kubeadm-assets.sh" contains daemon-reload, which prevents any other "ExecStartPre" to run, so it set as last command
ExecStartPre=/bin/bash /opt/kubeadm/kubeadm-assets.sh
ExecStart=/opt/bin/kubeadm join --config=/opt/kubeadm/kubeadm-join.yaml
ExecStartPost=/bin/touch /opt/kubeadm/kbd-init.done
StandardOutput=journal+console

[Install]
WantedBy=multi-user.target
RequiredBy=bootkube.service
